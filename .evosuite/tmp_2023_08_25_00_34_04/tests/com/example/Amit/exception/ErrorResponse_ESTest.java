/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 24 19:07:51 GMT 2023
 */

package com.example.Amit.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import com.example.Amit.exception.ErrorResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ErrorResponse_ESTest extends ErrorResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = Long.valueOf((long) (-1288));
      ErrorResponse errorResponse0 = new ErrorResponse("u:,Fa-dC{rPj$7F:C%F", (-1288), long0);
      ErrorResponse errorResponse1 = new ErrorResponse();
      boolean boolean0 = errorResponse0.equals(errorResponse1);
      assertFalse(boolean0);
      assertEquals((-1288), errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      boolean boolean0 = errorResponse0.equals(errorResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      Long long0 = errorResponse0.getTimeHappened();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = new Long(4826L);
      ErrorResponse errorResponse0 = new ErrorResponse("@^.8u2Wir'PC", (-573), long0);
      errorResponse0.getTimeHappened();
      assertEquals((-573), errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long((-1012L));
      ErrorResponse errorResponse0 = new ErrorResponse("`Sx2.<,", 59, long0);
      errorResponse0.getTimeHappened();
      assertEquals(59, errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      Long long0 = new Long((-871L));
      errorResponse0.setTimeHappened(long0);
      Long long1 = errorResponse0.getTimeHappened();
      assertEquals((-871L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long(1008L);
      ErrorResponse errorResponse0 = new ErrorResponse("", 43, long0);
      int int0 = errorResponse0.getStatusCode();
      assertEquals(43, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      errorResponse0.setStatusCode((-1122));
      int int0 = errorResponse0.getStatusCode();
      assertEquals((-1122), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(0);
      ErrorResponse errorResponse0 = new ErrorResponse("", 0, long0);
      errorResponse0.setErrorMessage("Y5VNdp\"I&;T(c6");
      errorResponse0.getErrorMessage();
      assertEquals(0, errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long((-1042));
      ErrorResponse errorResponse0 = new ErrorResponse("", (-1042), long0);
      errorResponse0.getErrorMessage();
      assertEquals((-1042), errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-980L));
      ErrorResponse errorResponse0 = new ErrorResponse("E2e$", 1, long0);
      errorResponse0.canEqual(errorResponse0);
      assertEquals(1, errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      boolean boolean0 = errorResponse0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(0);
      ErrorResponse errorResponse0 = new ErrorResponse("", 0, long0);
      errorResponse0.getTimeHappened();
      assertEquals(0, errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      String string0 = errorResponse0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      int int0 = errorResponse0.getStatusCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      errorResponse0.setErrorMessage("Iy");
      ErrorResponse errorResponse1 = new ErrorResponse();
      boolean boolean0 = errorResponse0.equals(errorResponse1);
      assertFalse(boolean0);
      assertEquals(0, errorResponse1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = Long.valueOf((long) 1069);
      ErrorResponse errorResponse0 = new ErrorResponse("<d@", 1069, long0);
      ErrorResponse errorResponse1 = new ErrorResponse("<d@", 1069, long0);
      boolean boolean0 = errorResponse0.equals(errorResponse1);
      assertTrue(boolean0);
      assertEquals(1069, errorResponse1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      Long long0 = new Long(0);
      ErrorResponse errorResponse1 = new ErrorResponse((String) null, 0, long0);
      boolean boolean0 = errorResponse1.equals(errorResponse0);
      assertEquals(0, errorResponse1.getStatusCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = Long.valueOf((long) 31);
      ErrorResponse errorResponse0 = new ErrorResponse("u:,Fa=-dC{rP-$7F:CjF", 31, long0);
      ErrorResponse errorResponse1 = new ErrorResponse();
      boolean boolean0 = errorResponse0.equals(errorResponse1);
      assertEquals(31, errorResponse0.getStatusCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      boolean boolean0 = errorResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      Long long0 = new Long(0);
      ErrorResponse errorResponse1 = new ErrorResponse((String) null, 0, long0);
      boolean boolean0 = errorResponse0.equals(errorResponse1);
      assertFalse(errorResponse1.equals((Object)errorResponse0));
      assertFalse(boolean0);
      assertEquals(0, errorResponse1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      errorResponse0.hashCode();
      assertEquals(0, errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Long long0 = Long.valueOf((long) 31);
      ErrorResponse errorResponse0 = new ErrorResponse("u:,Fa=-dC{rP-$7F:CjF", 31, long0);
      errorResponse0.hashCode();
      assertEquals(31, errorResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = Long.valueOf((long) 31);
      ErrorResponse errorResponse0 = new ErrorResponse("u:,Fa=-dC{rP-$7F:CjF", 31, long0);
      String string0 = errorResponse0.toString();
      assertEquals("ErrorResponse(errorMessage=u:,Fa=-dC{rP-$7F:CjF, statusCode=31, timeHappened=31)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      ErrorResponse errorResponse1 = new ErrorResponse();
      boolean boolean0 = errorResponse0.equals(errorResponse1);
      assertTrue(boolean0);
      assertEquals(0, errorResponse1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ErrorResponse errorResponse0 = new ErrorResponse();
      errorResponse0.setErrorMessage("Iy");
      ErrorResponse errorResponse1 = new ErrorResponse();
      boolean boolean0 = errorResponse1.equals(errorResponse0);
      assertEquals(0, errorResponse1.getStatusCode());
      assertFalse(boolean0);
      assertFalse(errorResponse0.equals((Object)errorResponse1));
  }
}
